import { flow, toGenerator } from "mobx-state-tree";
import { Iteration, Store } from "store";
import ai from "store/api";

import {
  generatePrompt,
  generator,
  prepareContent,
  systemPrompt,
} from "./utilities";

const generateTestScenarios = flow(function* (self: Store) {
  // Generate test scenarios
  const result = yield* toGenerator(
    ai.createChatCompletion({
      model: "gpt-3.5-turbo",
      n: 1,
      temperature: 0,
      messages: [
        { role: "user", content: systemPrompt },
        {
          role: "user",
          content: `description: ${self.description}`,
        },
        {
          role: "user",
          content: `product overview: ${self.productOverview}`,
        },
        {
          role: "user",
          content: `user stories: ${self.userStories
            .map(({ content }) => content)
            .join("\n")}`,
        },
        {
          role: "user",
          content: `requirements: ${self.requirements
            .map(({ content }) => content)
            .join("\n")}`,
        },
        {
          role: "user",
          content: `acceptance criteria: ${self.acceptanceCriteria
            .map(({ content }) => content)
            .join("\n")}`,
        },
        ...generatePrompt("test scenarios"),
        {
          role: "user",
          content:
            "In this stage you are asked to only generate the test scenario titles without the test cases. Later you will be asked to generate test cases for each test scenario.",
        },
      ],
    })
  );
  const testScenarios = result.data.choices[0].message?.content;

  if (testScenarios == null) {
    throw new Error("No response generated by ai for test scenarios!");
  }

  self.setTestScenarios(prepareContent(testScenarios));
  self.eventTarget.emit("iterationUpdate", Iteration.testScenarios);
}) as (self_: unknown) => Promise<void>;

export default generator(generateTestScenarios);
