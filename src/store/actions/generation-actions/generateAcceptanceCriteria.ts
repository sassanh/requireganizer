import { flow, toGenerator } from "mobx-state-tree";
import { Iteration, Store } from "store";
import ai from "store/api";

import {
  generatePrompt,
  generator,
  prepareContent,
  systemPrompt,
} from "./utilities";

const generateAcceptanceCriteria = flow(function* (self: Store) {
  // Generate acceptance criteria
  const result = yield* toGenerator(
    ai.createChatCompletion({
      model: "gpt-3.5-turbo",
      n: 1,
      temperature: 0,
      messages: [
        { role: "user", content: systemPrompt },
        {
          role: "user",
          content: `description: ${self.description}`,
        },
        {
          role: "user",
          content: `product overview: ${self.productOverview}`,
        },
        {
          role: "user",
          content: `user stories: ${self.userStories
            .map(({ content }) => `- ${content}`)
            .join("\n")}`,
        },
        {
          role: "user",
          content: `requirements: ${self.requirements
            .map(({ content }) => `- ${content}`)
            .join("\n")}`,
        },
        ...generatePrompt("acceptance criteria"),
      ],
    })
  );
  const acceptanceCriteria = result.data.choices[0].message?.content;

  if (acceptanceCriteria == null) {
    throw new Error("No response generated by ai for acceptance criteria!");
  }

  self.setAcceptanceCriteria(prepareContent(acceptanceCriteria));
  self.eventTarget.emit("iterationUpdate", Iteration.acceptanceCriteria);
}) as (self_: unknown) => Promise<void>;

export default generator(generateAcceptanceCriteria);
